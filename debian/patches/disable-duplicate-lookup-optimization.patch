ada's stack_check1.exe hangs when this optimization is enabled.

diff --git a/libports/manage-multithread.c b/libports/manage-multithread.c
index 60743d9..9bb4c00 100644
--- a/libports/manage-multithread.c
+++ b/libports/manage-multithread.c
@@ -173,6 +173,7 @@ ports_manage_port_operations_multithread (struct port_bucket *bucket,
       else
 	{
 	  pi = ports_lookup_port (bucket, inp->msgh_local_port, 0);
+#if 0
 	  if (pi)
 	    {
 	      /* Store the objects address as the payload and set the
@@ -185,6 +186,7 @@ ports_manage_port_operations_multithread (struct port_bucket *bucket,
 		MACH_MSG_TYPE_PROTECTED_PAYLOAD);
 	      inp->msgh_protected_payload = (unsigned long) pi;
 	    }
+#endif
 	}
 
       if (pi)
diff --git a/libports/manage-one-thread.c b/libports/manage-one-thread.c
index b920338..1b54daf 100644
--- a/libports/manage-one-thread.c
+++ b/libports/manage-one-thread.c
@@ -64,6 +64,7 @@ ports_manage_port_operations_one_thread (struct port_bucket *bucket,
       else
 	{
 	  pi = ports_lookup_port (bucket, inp->msgh_local_port, 0);
+#if 0
 	  if (pi)
 	    {
 	      /* Store the objects address as the payload and set the
@@ -76,6 +77,7 @@ ports_manage_port_operations_one_thread (struct port_bucket *bucket,
 		MACH_MSG_TYPE_PROTECTED_PAYLOAD);
 	      inp->msgh_protected_payload = (unsigned long) pi;
 	    }
+#endif
 	}
 
       if (pi)
