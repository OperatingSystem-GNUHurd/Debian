Index: libpthread/include/pthread/pthread.h
===================================================================
RCS file: /cvsroot/hurd/hurd/libpthread/include/pthread/pthread.h,v
retrieving revision 1.9
diff -u -p -r1.9 pthread.h
--- libpthread/include/pthread/pthread.h	24 Jun 2007 15:11:52 -0000	1.9
+++ libpthread/include/pthread/pthread.h	3 Sep 2007 22:21:52 -0000
@@ -454,31 +454,31 @@ extern int pthread_spin_unlock (pthread_
 
 # ifdef __USE_EXTERN_INLINES
 
-extern __inline int
+__extern_inline int
 pthread_spin_destroy (pthread_spinlock_t *__lock)
 {
   return __pthread_spin_destroy (__lock);
 }
 
-extern __inline int
+__extern_inline int
 pthread_spin_init (pthread_spinlock_t *__lock, int __pshared)
 {
   return __pthread_spin_init (__lock, __pshared);
 }
 
-extern __inline int
+__extern_inline int
 pthread_spin_lock (pthread_spinlock_t *__lock)
 {
   return __pthread_spin_lock (__lock);
 }
 
-extern __inline int
+__extern_inline int
 pthread_spin_trylock (pthread_spinlock_t *__lock)
 {
   return __pthread_spin_trylock (__lock);
 }
 
-extern __inline int
+__extern_inline int
 pthread_spin_unlock (pthread_spinlock_t *__lock)
 {
   return __pthread_spin_unlock (__lock);
Index: libpthread/sysdeps/generic/bits/pthread.h
===================================================================
RCS file: /cvsroot/hurd/hurd/libpthread/sysdeps/generic/bits/pthread.h,v
retrieving revision 1.2
diff -u -p -r1.2 pthread.h
--- libpthread/sysdeps/generic/bits/pthread.h	18 Jan 2005 09:57:35 -0000	1.2
+++ libpthread/sysdeps/generic/bits/pthread.h	3 Sep 2007 22:21:52 -0000
@@ -24,10 +24,15 @@ typedef int pthread_t;
 
 /* Return true if __T1 and __T2 both name the same thread.  Otherwise,
    false.  */
-extern __inline int
+extern int
+pthread_equal (pthread_t __t1, pthread_t __t2);
+
+#ifdef __USE_EXTERN_INLINES
+__extern_inline int
 pthread_equal (pthread_t __t1, pthread_t __t2)
 {
   return __t1 == __t2;
 }
+#endif
 
 #endif /* bits/pthread.h */
Index: libpthread/sysdeps/i386/bits/memory.h
===================================================================
RCS file: /cvsroot/hurd/hurd/libpthread/sysdeps/i386/bits/memory.h,v
retrieving revision 1.1
diff -u -p -r1.1 memory.h
--- libpthread/sysdeps/i386/bits/memory.h	10 Oct 2002 23:05:05 -0000	1.1
+++ libpthread/sysdeps/i386/bits/memory.h	3 Sep 2007 22:21:52 -0000
@@ -21,7 +21,7 @@
 #define _BITS_MEMORY_H	1
 
 /* Prevent read and write reordering across this function.  */
-inline void
+static inline void
 __memory_barrier (void)
 {
   int i;
Index: libpthread/sysdeps/i386/bits/spin-lock.h
===================================================================
RCS file: /cvsroot/hurd/hurd/libpthread/sysdeps/i386/bits/spin-lock.h,v
retrieving revision 1.3
diff -u -p -r1.3 spin-lock.h
--- libpthread/sysdeps/i386/bits/spin-lock.h	12 May 2005 20:55:37 -0000	1.3
+++ libpthread/sysdeps/i386/bits/spin-lock.h	3 Sep 2007 22:21:52 -0000
@@ -42,7 +42,7 @@ typedef __volatile int __pthread_spinloc
 # endif
 
 # ifndef __PT_SPIN_INLINE
-#  define __PT_SPIN_INLINE extern __inline
+#  define __PT_SPIN_INLINE __extern_inline
 # endif
 
 __PT_SPIN_INLINE int __pthread_spin_destroy (__pthread_spinlock_t *__lock);
@@ -74,10 +74,10 @@ __pthread_spin_trylock (__pthread_spinlo
   return __locked ? __EBUSY : 0;
 }
 
-extern __inline int __pthread_spin_lock (__pthread_spinlock_t *__lock);
+__extern_inline int __pthread_spin_lock (__pthread_spinlock_t *__lock);
 extern int _pthread_spin_lock (__pthread_spinlock_t *__lock);
 
-extern __inline int
+__extern_inline int
 __pthread_spin_lock (__pthread_spinlock_t *__lock)
 {
   if (__pthread_spin_trylock (__lock))
Index: libpthread/sysdeps/mach/bits/spin-lock.h
===================================================================
RCS file: /cvsroot/hurd/hurd/libpthread/sysdeps/mach/bits/spin-lock.h,v
retrieving revision 1.2
diff -u -p -r1.2 spin-lock.h
--- libpthread/sysdeps/mach/bits/spin-lock.h	18 Jan 2005 09:57:34 -0000	1.2
+++ libpthread/sysdeps/mach/bits/spin-lock.h	3 Sep 2007 22:21:52 -0000
@@ -41,7 +41,7 @@ typedef __spin_lock_t __pthread_spinlock
 # endif
 
 # ifndef __PT_SPIN_INLINE
-#  define __PT_SPIN_INLINE extern __inline
+#  define __PT_SPIN_INLINE __extern_inline
 # endif
 
 __PT_SPIN_INLINE int __pthread_spin_destroy (__pthread_spinlock_t *__lock);
@@ -70,10 +70,10 @@ __pthread_spin_trylock (__pthread_spinlo
   return __spin_try_lock (__lock) ? 0 : __EBUSY;
 }
 
-extern __inline int __pthread_spin_lock (__pthread_spinlock_t *__lock);
+__extern_inline int __pthread_spin_lock (__pthread_spinlock_t *__lock);
 extern int _pthread_spin_lock (__pthread_spinlock_t *__lock);
 
-extern __inline int
+__extern_inline int
 __pthread_spin_lock (__pthread_spinlock_t *__lock)
 {
   if (__pthread_spin_trylock (__lock))
