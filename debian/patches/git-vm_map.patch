diff --git a/console/pager.c b/console/pager.c
index 3568211..5e13ba4 100644
--- a/console/pager.c
+++ b/console/pager.c
@@ -169,6 +169,7 @@ user_pager_create (struct user_pager *user_pager, unsigned int npages,
   mach_port_insert_right (mach_task_self (), user_pager->memobj,
 			  user_pager->memobj, MACH_MSG_TYPE_MAKE_SEND);
 
+  *user = 0;
   err = vm_map (mach_task_self (),
 		(vm_address_t *) user,
 		(vm_size_t) npages * vm_page_size,
diff --git a/libdiskfs/disk-pager.c b/libdiskfs/disk-pager.c
index 4083ef2..008aa2d 100644
--- a/libdiskfs/disk-pager.c
+++ b/libdiskfs/disk-pager.c
@@ -60,6 +60,7 @@ diskfs_start_disk_pager (struct user_pager_info *upi,
 			  MACH_MSG_TYPE_MAKE_SEND);
 
   /* Now map the disk image.  */
+  *image = 0;
   err = vm_map (mach_task_self (), (vm_address_t *)image, size,
 		0, 1, disk_pager_port, 0, 0,
 		VM_PROT_READ | (diskfs_readonly ? 0 : VM_PROT_WRITE),
diff --git a/libpager/pager-memcpy.c b/libpager/pager-memcpy.c
index f2be558..7bdc248 100644
--- a/libpager/pager-memcpy.c
+++ b/libpager/pager-memcpy.c
@@ -64,6 +64,7 @@ pager_memcpy (struct pager *pager, memory_object_t memobj,
 	  assert (window_size >= VMCOPY_BETTER_THAN_MEMCPY);
 	  assert ((window_size & (vm_page_size - 1)) == 0);
 	  
+	  window = 0;
 	  err = vm_map (mach_task_self (), &window, window_size, 0, 1,
 			memobj, offset, 0, prot, prot, VM_INHERIT_NONE);
 	  if (err)
@@ -110,6 +111,7 @@ pager_memcpy (struct pager *pager, memory_object_t memobj,
 		  window_size = round_page (pageoff + to_copy);
 		}
 
+	      window = 0;
 	      err = vm_map (mach_task_self (), &window, window_size, 0, 1,
 			    memobj, offset - pageoff, 0,
 			    prot, prot, VM_INHERIT_NONE);
diff --git a/libstore/memobj.c b/libstore/memobj.c
index 0d5c816..cc6c7ca 100644
--- a/libstore/memobj.c
+++ b/libstore/memobj.c
@@ -133,6 +133,7 @@ memobj_read (struct store *store,
   if (((size_t) addr & (vm_page_size - 1)) == 0)
     {
       *len = amount;
+      *buf = 0;
       return vm_map (mach_task_self (), (vm_address_t *) buf, amount,
 		     0, 1, store->port, addr << store->log2_block_size, 0,
 		     VM_PROT_READ, VM_PROT_ALL, VM_INHERIT_NONE);
diff --git a/tmpfs/node.c b/tmpfs/node.c
index acc029a..8835e3f 100644
--- a/tmpfs/node.c
+++ b/tmpfs/node.c
@@ -508,6 +508,7 @@ diskfs_get_filemap (struct node *np, vm_prot_t prot)
       
       /* XXX we need to keep a reference to the object, or GNU Mach
 	 will terminate it when we release the map. */
+      np->dn->u.reg.memref = 0;
       vm_map (mach_task_self (), &np->dn->u.reg.memref, 4096, 0, 1,
 	      np->dn->u.reg.memobj, 0, 0, VM_PROT_NONE, VM_PROT_NONE,
 	      VM_INHERIT_NONE);
