/* Miscellaneous callbacks from Hurd fs servers to their clients.
   Copyright (C) 1991,92,93,94,95,2002 Free Software Foundation, Inc.

This file is part of the GNU Hurd.

The GNU Hurd is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

The GNU Hurd is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with the GNU Hurd; see the file COPYING.  If not, write to
the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */

subsystem fs_notify 20500;

#include <hurd/hurd_types.defs>

#ifdef FS_NOTIFY_IMPORTS
FS_NOTIFY_IMPORTS
#endif

/* For maximum robustness, the server must not wait for the client to
   receive the notification message.  This is achieved by setting a
   send timeout (XXX which is implicitely 0 with MACH_MSG_TIMEOUT_NONE).  */
MsgOption MACH_SEND_TIMEOUT;

/* This is sent by a filesystem (after being requested with
   dir_notice_changes) every time a directory is changed.
   CHANGE identifies the sort of change that has occurred (see hurd_types.h);
   NAME is the name that was changed.  TICKNO is a sequential number
   that allows the client to verify that it got all notifications.  */
simpleroutine dir_changed (
	notify_port: fs_notify_t;
	tickno: natural_t;
	change: dir_changed_type_t;
	name: string_t);

/* This is sent by a filesystem (after being requested with
   file_notice_changes) every time a file or its stat info is changed.
   CHANGE identifies the sort of change that has occurred (see hurd_types.h);
   START and END identify the affected regions of the file's data.
   TICKNO is a sequential number that allows the client to verify that
   it got all notifications.  */
simpleroutine file_changed (
	notify_port: fs_notify_t;
	tickno: natural_t;
	change: file_changed_type_t;
	start: loff_t;
	end: loff_t);
